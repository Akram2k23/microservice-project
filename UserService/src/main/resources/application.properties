#DB Connection

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.url=jdbc:mysql://localhost:3306/microservices

spring.datasource.username=root

spring.datasource.password=rootpassword

spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

spring.jpa.show-sql=true

server.port=8081


#These information fetch from application.properties that present on githu (git->configServer->configClient)
#===========================================================================================================

#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#eureka.instance.prefer-ip-address=true

spring.application.name=USER-SERVICE



#Use to fetch configuration from config-server
#=============================================

spring.config.import=configserver:http://localhost:8085
#spring.config.import=optional:configserver:http://localhost:8085
#spring.profiles.active=dev


#Actuator configuration
#======================

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always


#Resilience4j configuration (For Circuit breaker)
#============================================

resilience4j.circuitbreaker.instances.ratingHotelBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.ratingHotelBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.ratingHotelBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.wait-duration-in-open-state=6s
resilience4j.circuitbreaker.instances.ratingHotelBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.ratingHotelBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.sliding-window-type=count-based


#Resilience4j configuration (For retry)
#============================================

resilience4j.retry.instances.ratingHotelService.max-attempts=3
resilience4j.retry.instances.ratingHotelService.wait-duration=5s


#Resilience4j configuration (For Rate Limiter) // limit-refresh-period=4s means "in 4 seconds" // limit-for-period=2 means "2 users allowed"
#============================================

resilience4j.ratelimiter.instances.UserRateLimiter.limit-refresh-period=4s
resilience4j.ratelimiter.instances.UserRateLimiter.limit-for-period=2
resilience4j.ratelimiter.instances.UserRateLimiter.timeout-duration=2s



#Okta configuration

okta.oauth2.issuer=https://dev-11222560.okta.com/oauth2/default
okta.oauth2.audience=api://default


#User service works as a client -> spring security configuration

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-11222560.okta.com/oauth2/default
spring.security.oauth2.client.registration.my-internal-client.provider=okta
spring.security.oauth2.client.registration.my-internal-client.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.my-internal-client.scope=internal
spring.security.oauth2.client.registration.my-internal-client.client-id=0oaai08lgozuImRpj5d7
spring.security.oauth2.client.registration.my-internal-client.client-secret=ECGl97UTgBEA3oVz9HigpiiVvJKz1IQBqO3DBQ-8xboSSwPIPMr5CPuU-7pJYryV
spring.security.oauth2.client.provider.okta.issuer-uri=https://dev-11222560.okta.com/oauth2/default



